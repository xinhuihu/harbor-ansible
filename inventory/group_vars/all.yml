###################################################
# Docker configurations
#
# docker registry
#docker_registry: 10.84.34.155:5000
#docker_registry_insecure: True
#
# install docker from package rather than installer from get.docker.com which is default method
docker_install_method: installer

#how to service: docker or package 
deploy_by_docker: True

retry_stagger: 5
##### haproxy and keepalived config ###############

keepalived_sync_groups:
  haproxy:
    instances:
      - external

haproxy_ssl: false
haproxy_use_keepalived: true
internal_lb_vip_address: "10.1.0.222"
external_lb_vip_address: "{{ internal_lb_vip_address }}"
haproxy_keepalived_external_vip_cidr: "{{external_lb_vip_address}}/32"
haproxy_keepalived_external_interface: "{{ ansible_default_ipv4.interface }}"
haproxy_keepalived_authentication_password: 'keepalived'
keepalived_instances:
  external:
    interface: "{{ haproxy_keepalived_external_interface }}"
    state: "BACKUP"
    virtual_router_id: "{{ haproxy_keepalived_external_virtual_router_id | default ('10') }}"
    priority: "{{ ((ansible_play_hosts|length-ansible_play_hosts.index(inventory_hostname))*100)-((ansible_play_hosts|length-ansible_play_hosts.index(inventory_hostname))*50) }}"
    authentication_password: "{{ haproxy_keepalived_authentication_password }}"
    vips:
      - "{{ haproxy_keepalived_external_vip_cidr | default('10.1.0.222/32')  }} dev {{ haproxy_keepalived_external_interface }}"

haproxy_default_services:
  - service:
      haproxy_service_name: galera
      haproxy_backend_nodes: "{{ (groups['galera_all'] | default([]))[:1] }}"  # list expected
      haproxy_backup_nodes: "{{ (groups['galera_all'] | default([]))[1:] }}"
      haproxy_bind: "{{ [external_lb_vip_address] }}"
      haproxy_port: 3306
      haproxy_balance_type: tcp
      haproxy_timeout_client: 5000s
      haproxy_timeout_server: 5000s
      haproxy_service_enabled: "{{ groups['galera_all'] is defined and groups['galera_all'] | length > 0 }}"

  - service:
      haproxy_service_name: redis
      haproxy_backend_nodes: "{{ (groups['redis-cluster'] | default([]))[:1] }}"  # list expected
      haproxy_backup_nodes: "{{ (groups['redis-cluster'] | default([]))[1:] }}"
      haproxy_bind: "{{ [external_lb_vip_address] }}"
      haproxy_port: 6379
      haproxy_backend_port: 7000
      haproxy_balance_type: tcp
      haproxy_timeout_client: 5000s
      haproxy_timeout_server: 5000s
      haproxy_service_enabled: "{{ groups['redis-cluster'] is defined and groups['redis-cluster'] | length > 0 }}"

  - service:
      haproxy_service_name: harbor
      haproxy_backend_nodes: "{{ groups['harbor-instances'] | default([]) }}"  # list expected
      haproxy_bind: "{{ [external_lb_vip_address] }}"
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_port: 80
      haproxy_backend_port: 80
      haproxy_redirect_http_port: 80
      haproxy_balance_type: http
      haproxy_balance_alg: source
      haproxy_service_enabled: "{{ groups['harbor-instances'] is defined and groups['harbor-instances'] | length > 0 }}"

haproxy_bind_on_non_local: "True"
keepalived_selinux_compile_rules:
  - keepalived_ping
  - keepalived_haproxy_pid_file

# Ensure that the package state matches the global setting
haproxy_package_state: "latest"

##### database config #################
galera_root_password: "root123"



##### Redis config #####################
all_redis_node_group: "redis-cluster"

redis_name: "redis"
redis_version: "4.0.1"

redis_download_path: "/tmp"
redis_install_path: "/usr/local"
redis_src_path: "{{ redis_install_path }}/{{ redis_name }}-{{ redis_version }}"
redis_data_path: "/opt/redis"

redis_file: "{{ redis_name }}-{{ redis_version }}.tar.gz"
redis_file_url: "http://download.redis.io/releases/{{ redis_file }}"
redis_file_path: "{{ redis_download_path }}/{{ redis_file }}"

redis_deploy_type: 'cluster'

redis_cluster_node_port_size: 2
redis_cluster_min_port_size: 6
redis_cluster_begin_port: 7000
redis_cluster_replicas: 1
redis_cluster_trib_separator: " "

redis_passwd: ""

redis_log_level: notice
redis_log_dir: /export/logs/redis

##### storage config #####################
storage_type: "NFS"
